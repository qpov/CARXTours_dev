[{"A:\\CARXTours\\site\\frontend\\src\\index.js":"1","A:\\CARXTours\\site\\frontend\\src\\App.js":"2","A:\\CARXTours\\site\\frontend\\src\\reportWebVitals.js":"3","A:\\CARXTours\\site\\frontend\\src\\pages\\Error.js":"4","A:\\CARXTours\\site\\frontend\\src\\pages\\Ivents.js":"5","A:\\CARXTours\\site\\frontend\\src\\pages\\Login.js":"6","A:\\CARXTours\\site\\frontend\\src\\pages\\Register.js":"7","A:\\CARXTours\\site\\frontend\\src\\pages\\Profile.js":"8","A:\\CARXTours\\site\\frontend\\src\\pages\\Create.js":"9","A:\\CARXTours\\site\\frontend\\src\\pages\\TournamentPage.js":"10","A:\\CARXTours\\site\\frontend\\src\\components\\AuthContext.js":"11","A:\\CARXTours\\site\\frontend\\src\\components\\News.js":"12","A:\\CARXTours\\site\\frontend\\src\\components\\Tournaments.js":"13","A:\\CARXTours\\site\\frontend\\src\\components\\Header.js":"14","A:\\CARXTours\\site\\frontend\\src\\components\\Footer.js":"15","A:\\CARXTours\\site\\frontend\\src\\pages\\Grid.js":"16"},{"size":1421,"mtime":1689658682260,"results":"17","hashOfConfig":"18"},{"size":416,"mtime":1689314729951,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1675032362599,"results":"20","hashOfConfig":"18"},{"size":420,"mtime":1688326520184,"results":"21","hashOfConfig":"18"},{"size":1567,"mtime":1691600158320,"results":"22","hashOfConfig":"18"},{"size":3251,"mtime":1691600158312,"results":"23","hashOfConfig":"18"},{"size":2937,"mtime":1689282982858,"results":"24","hashOfConfig":"18"},{"size":6170,"mtime":1691600158312,"results":"25","hashOfConfig":"18"},{"size":6888,"mtime":1691599923730,"results":"26","hashOfConfig":"18"},{"size":18984,"mtime":1691600158304,"results":"27","hashOfConfig":"18"},{"size":640,"mtime":1688257383094,"results":"28","hashOfConfig":"18"},{"size":1244,"mtime":1691599771740,"results":"29","hashOfConfig":"18"},{"size":1586,"mtime":1689332995112,"results":"30","hashOfConfig":"18"},{"size":1226,"mtime":1689415362868,"results":"31","hashOfConfig":"18"},{"size":238,"mtime":1689690935933,"results":"32","hashOfConfig":"18"},{"size":9158,"mtime":1691600158312,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x5q3us",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},"A:\\CARXTours\\site\\frontend\\src\\index.js",[],[],"A:\\CARXTours\\site\\frontend\\src\\App.js",[],[],"A:\\CARXTours\\site\\frontend\\src\\reportWebVitals.js",[],[],"A:\\CARXTours\\site\\frontend\\src\\pages\\Error.js",[],[],"A:\\CARXTours\\site\\frontend\\src\\pages\\Ivents.js",[],[],"A:\\CARXTours\\site\\frontend\\src\\pages\\Login.js",[],[],"A:\\CARXTours\\site\\frontend\\src\\pages\\Register.js",[],[],"A:\\CARXTours\\site\\frontend\\src\\pages\\Profile.js",["85"],[],"import React, { useState, useEffect } from 'react';\r\nimport Header from '../components/Header';\r\nimport '../css/profile.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Profile() {\r\n  const [user, setUser] = useState(null);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [showAlreadyOrganizer, setShowAlreadyOrganizer] = useState(false);\r\n  const [shortOrgName, setShortOrgName] = useState('');\r\n  const [fullOrgName, setFullOrgName] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch('https://carxtours.com/api/auth/userprofile/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${localStorage.getItem('token')}`,\r\n      },\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Не авторизован');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        console.log('Data from server:', data); // Добавлено для отладки\r\n        setUser(data);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        navigate('/login');\r\n      });\r\n  }, []);\r\n\r\n  const handleConfirm = () => {\r\n    fetch('https://carxtours.com/api/auth/userprofile/update/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${localStorage.getItem('token')}`,\r\n      },\r\n      body: JSON.stringify({\r\n        status: 'Организатор',\r\n        short_org_name: shortOrgName,\r\n        full_org_name: fullOrgName,\r\n      }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setUser(data);\r\n        setShowConfirm(false);\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  const handleOrganizerClick = () => {\r\n      if (user && user.userprofile && user.userprofile.status === 'Организатор') {\r\n          setShowAlreadyOrganizer(true);\r\n      } else {\r\n          setShowConfirm(true);\r\n      }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    fetch('https://carxtours.com/api/auth/logout/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${localStorage.getItem('token')}`,\r\n      },\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Не удалось выйти из аккаунта');\r\n        }\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('isLoggedIn');\r\n        localStorage.removeItem('userId');\r\n        navigate('/login');\r\n      })\r\n      .catch(err => console.error(err));\r\n  };  \r\n\r\n  return (\r\n    <div>\r\n        <Header />\r\n        {user && (\r\n            <div className=\"userInfo\">\r\n                <p>Ник: {user.username}</p>\r\n                <p>Регистрация: {new Date(user.date_joined).toLocaleDateString()}</p>\r\n                {user.userprofile ? (\r\n                    <>\r\n                        <p>Статус: {user.userprofile.status}</p>\r\n                        <div className='exit'>\r\n                            <button onClick={handleLogout}>Выйти с аккаунта</button>\r\n                        </div>\r\n                        {user.userprofile.status === 'Организатор' ? (\r\n                            <div className=\"organizer\">\r\n                                <p>Организация:</p>\r\n                                <p>Сокращённое название: {user.userprofile.short_org_name}</p>\r\n                                <p>Полное название: {user.userprofile.full_org_name}</p>\r\n                                <Link to=\"/create\">Создать турнир</Link>\r\n                            </div>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <button onClick={handleOrganizerClick}>Получить статус организатора</button>\r\n                                {showConfirm && (\r\n                                    <div className=\"createOrganizer\">\r\n                                        <label>Сокращённое название организации:</label>\r\n                                        <input value={shortOrgName} onChange={(e) => setShortOrgName(e.target.value)} />\r\n                                        <label>Полное название организации:</label>\r\n                                        <input value={fullOrgName} onChange={(e) => setFullOrgName(e.target.value)} />\r\n                                        <p>Вы уверены, что хотите получить статус организатора?</p>\r\n                                        <button className='yes' onClick={handleConfirm}>Да</button>\r\n                                        <button className='no' onClick={() => setShowConfirm(false)}>Нет</button>\r\n                                    </div>\r\n                                )}\r\n                                {showAlreadyOrganizer && (\r\n                                    <div className=\"createOrganizer\">\r\n                                        <p>У вас уже есть статус организатора</p>\r\n                                        <button onClick={() => setShowAlreadyOrganizer(false)}>OK</button>\r\n                                    </div>\r\n                                )}\r\n                            </React.Fragment>\r\n                        )}\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <p>Статус: не установлен</p>\r\n                        <div className='exit'>\r\n                            <button onClick={handleLogout}>Выйти с аккаунта</button>\r\n                        </div>\r\n                        <button onClick={handleOrganizerClick}>Получить статус организатора</button>\r\n                    </>\r\n                )}\r\n            </div>\r\n        )}\r\n    </div>\r\n);\r\n}\r\n","A:\\CARXTours\\site\\frontend\\src\\pages\\Create.js",["86"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport '../css/create.css';\r\n\r\nexport default function Create() {\r\n  const [shortOrgName, setShortOrgName] = useState('');\r\n  const [fullOrgName, setFullOrgName] = useState('');\r\n  const [tournamentName, setTournamentName] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [map, setMap] = useState('');\r\n  const [mapLink, setMapLink] = useState('');\r\n  const [task, setTask] = useState('');\r\n  const [example, setExample] = useState('');\r\n  const [reglament, setReglament] = useState('');\r\n  const [visualReglament, setVisualReglament] = useState('');\r\n  const [maxPilots, setMaxPilots] = useState('');\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [isImageSelected, setIsImageSelected] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch('https://carxtours.com/api/auth/userprofile/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${localStorage.getItem('token')}`,\r\n      },\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Не авторизован');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setShortOrgName(data.userprofile.short_org_name);\r\n        setFullOrgName(data.userprofile.full_org_name);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        navigate('/login');\r\n      });\r\n  }, []);\r\n\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setIsImageSelected(true);\r\n      setImageFile(file);\r\n    } else {\r\n      setIsImageSelected(false);\r\n      setImageFile(null);\r\n    }\r\n  };\r\n\r\n  const handleTournamentNameChange = (e) => {\r\n    setTournamentName(e.target.value);\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    setDate(e.target.value);\r\n  };\r\n\r\n  const handleMapChange = (e) => {\r\n    setMap(e.target.value);\r\n  };\r\n\r\n  const handleMapLinkChange = (e) => {\r\n    setMapLink(e.target.value);\r\n  };\r\n\r\n  const handleTaskChange = (e) => {\r\n    setTask(e.target.value);\r\n  };\r\n\r\n  const handleExampleChange = (e) => {\r\n    setExample(e.target.value);\r\n  };\r\n\r\n  const handleReglamentChange = (e) => {\r\n    setReglament(e.target.value);\r\n  };\r\n\r\n  const handleVisualReglamentChange = (e) => {\r\n    setVisualReglament(e.target.value);\r\n  };\r\n\r\n  const handleMaxPilotsChange = (e) => {\r\n    const value = e.target.value;\r\n    setMaxPilots(value === '' ? null : value);\r\n  };\r\n\r\n  const handleTournamentCreate = () => {\r\n    // Проверка выбрано ли изображение\r\n    if (!isImageSelected) {\r\n      alert('Пожалуйста, выберите изображение.');\r\n      return;\r\n    }\r\n\r\n    const data = new FormData();\r\n    data.append('owner', localStorage.getItem('userId'));\r\n    data.append('short_org_name', shortOrgName);\r\n    data.append('full_org_name', fullOrgName);\r\n    data.append('tournament_name', tournamentName);\r\n    data.append('date', date);\r\n    data.append('map', map);\r\n    data.append('map_link', mapLink);\r\n    data.append('task', task);\r\n    data.append('example', example);\r\n    data.append('reglament', reglament);\r\n    data.append('visual_reglament', visualReglament);\r\n\r\n    if (maxPilots !== '') {\r\n      data.append('max_pilots', maxPilots);\r\n    }\r\n\r\n    if (imageFile) {\r\n      data.append('image', imageFile);\r\n    }\r\n\r\n    fetch('https://carxtours.com/api/tournaments/create/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Token ${localStorage.getItem('token')}`,\r\n      },\r\n      body: data,\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          return response.text().then(text => {\r\n            console.error(text);\r\n            throw new Error('Ошибка при создании турнира');\r\n          });\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        navigate(`/tournament/${data.id}`);\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className='create'>\r\n        <p>Сокращённое название организации: {shortOrgName}</p>\r\n        <p>Полное название организации: {fullOrgName}</p>\r\n        <div className='tour_name'>\r\n          <label>Название турнира:</label>\r\n          <input value={tournamentName} onChange={handleTournamentNameChange} placeholder='Обязательно'/>\r\n        </div>\r\n        <div className='tour_date'>\r\n          <label>Дата проведения:</label>\r\n          <input type=\"date\" value={date} onChange={handleDateChange} placeholder='Обязательно'/>\r\n        </div>\r\n        <div className='tour_map'>\r\n          <label>Карта:</label>\r\n          <input value={map} onChange={handleMapChange} placeholder='Обязательно'/>\r\n        </div>\r\n        <div className='tour_maplink'>\r\n          <label>Ссылка на карту (рекомендуется использовать Google Disk):</label>\r\n          <input value={mapLink} onChange={handleMapLinkChange} />\r\n        </div>\r\n        <div className='tour_example'>\r\n          <label>Примерный проезд (ссылка на YouTube):</label>\r\n          <input value={example} onChange={handleExampleChange} placeholder='Обязательно'/>\r\n        </div>\r\n        <div className='tour_task'>\r\n          <label>Судейское задание:</label>\r\n          <textarea value={task} onChange={handleTaskChange} placeholder='Обязательно'/>\r\n        </div>\r\n        <div className='tour_reglament'>\r\n          <label>Регламент:</label>\r\n          <textarea value={reglament} onChange={handleReglamentChange} placeholder='Обязательно'/>\r\n        </div>\r\n        <div className='tour_visual_reglament'>\r\n          <label>Визуальный регламент:</label>\r\n          <textarea value={visualReglament} onChange={handleVisualReglamentChange} />\r\n        </div>\r\n        <div className='tour_pilots'>\r\n          <label>Максимальное кол-во пилотов (оставьте поле пустым если ограничение не нужно):</label>\r\n          <input value={maxPilots} onChange={handleMaxPilotsChange} />\r\n        </div>\r\n        <div className='create_image'>\r\n          <label>(Обязательно) Баннер:</label>\r\n          <input type='file' accept=\"image/*\" onChange={handleImageChange} />\r\n        </div>\r\n        <div className='tour_create'>\r\n          <button onClick={handleTournamentCreate}>Создать турнир</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","A:\\CARXTours\\site\\frontend\\src\\pages\\TournamentPage.js",[],[],"A:\\CARXTours\\site\\frontend\\src\\components\\AuthContext.js",[],[],"A:\\CARXTours\\site\\frontend\\src\\components\\News.js",[],[],"A:\\CARXTours\\site\\frontend\\src\\components\\Tournaments.js",[],[],"A:\\CARXTours\\site\\frontend\\src\\components\\Header.js",[],[],"A:\\CARXTours\\site\\frontend\\src\\components\\Footer.js",[],[],"A:\\CARXTours\\site\\frontend\\src\\pages\\Grid.js",["87","88","89","90"],[],"import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport '../css/grid.css';\r\n\r\n  function Grid() {\r\n    const { id } = useParams();\r\n    const [rounds, setRounds] = useState([]);\r\n    const [tournamentWinner, setTournamentWinner] = useState(null);\r\n    const [ownerId, setOwnerId] = useState(null);\r\n    const [winners, setWinners] = useState([]);\r\n    const [losers, setLosers] = useState([]);\r\n    const [thirdPlaceFighters, setThirdPlaceFighters] = useState([]);\r\n    const [thirdPlaceWinner, setThirdPlaceWinner] = useState(null);\r\n    const [thirdPlaceMatch, setThirdPlaceMatch] = useState(null);\r\n    const [participants, setParticipants] = useState([]);\r\n    const totalRounds = Math.ceil(Math.log2(participants.length));\r\n\r\n    const createRound = (players) => {\r\n      const pairs = [];\r\n      for (let i = 0; i < players.length; i += 2) {\r\n        pairs.push({\r\n          players: [players[i], players[i + 1]],\r\n          winner: null,\r\n        });\r\n      }\r\n    \r\n      if (players.length % 2 === 1) {\r\n        pairs[pairs.length - 1].players.push(null);\r\n      }\r\n    \r\n      return pairs;\r\n    };\r\n    \r\n    useEffect(() => {\r\n      const activeRound = rounds[rounds.length - 1];\r\n      if (!activeRound) return;\r\n    \r\n      const allPairsHaveWinners = activeRound.every(pair => pair.winner !== null);\r\n      if (!allPairsHaveWinners) return;\r\n    \r\n      const winners = activeRound.map(pair => pair.winner);\r\n      const losers = activeRound.map(pair => pair.players.find(player => player !== pair.winner));\r\n    \r\n      setLosers(losers);\r\n    \r\n      if (winners.length === 2) {\r\n        setThirdPlaceFighters(losers);\r\n      } else if (winners.length === 1) {\r\n        setTournamentWinner(winners[0]);\r\n        setWinners(prevWinners => [...prevWinners, winners[0]]);\r\n        return;\r\n      }\r\n    \r\n      const newRound = createRound(winners);\r\n      setRounds(prevRounds => [...prevRounds, newRound]);\r\n    \r\n    }, [rounds]);    \r\n\r\n    const handleWinnerSelect = (roundIndex, pairIndex, winnerIndex) => {\r\n      const currentUserId = parseInt(window.localStorage.getItem('userId'));\r\n    \r\n      if (currentUserId !== ownerId) {\r\n        alert('Вы не являетесь владельцем этого турнира');\r\n        return;\r\n      }\r\n    \r\n      const updatedRounds = rounds.map((round, index) => {\r\n        if (index === roundIndex) {\r\n          const updatedPairs = round.map((pair, pIndex) => {\r\n            if (pIndex === pairIndex) {\r\n              const winner = pair.players[winnerIndex] ? pair.players[winnerIndex] : null;\r\n              console.log('Selected winner:', winner);\r\n              return {\r\n                ...pair,\r\n                winner: winner ? { ...winner } : null,\r\n              };\r\n            }\r\n            return pair;\r\n          });\r\n          return updatedPairs;\r\n        }\r\n        return round;\r\n      });\r\n    \r\n      setRounds(updatedRounds);\r\n    \r\n      const winners = updatedRounds[roundIndex].map(pair => pair.winner);\r\n      const losers = updatedRounds[roundIndex].map(pair => pair.players.find(player => player !== pair.winner));\r\n    \r\n      if (roundIndex === totalRounds - 2 && losers[0]) {\r\n        setThirdPlaceMatch({ players: losers, winner: null });\r\n      }\r\n    \r\n      setWinners(prevWinners => [...prevWinners, ...winners]);\r\n    };\r\n\r\n    const handleThirdPlaceWinnerSelect = (winnerIndex) => {\r\n      const currentUserId = parseInt(window.localStorage.getItem('userId'));\r\n    \r\n      if (currentUserId !== ownerId) {\r\n        alert('Вы не являетесь владельцем этого турнира');\r\n        return;\r\n      }\r\n    \r\n      if (thirdPlaceMatch && thirdPlaceMatch.players && thirdPlaceMatch.players[winnerIndex]) {\r\n        const updatedThirdPlaceMatch = {\r\n          players: thirdPlaceMatch.players,\r\n          winner: thirdPlaceMatch.players[winnerIndex], // Установка победителя в соответствии с выбранным индексом\r\n        };\r\n        setThirdPlaceMatch(updatedThirdPlaceMatch);\r\n        setThirdPlaceWinner(updatedThirdPlaceMatch.winner);\r\n      } else {\r\n        alert('Выбранный индекс не соответствует участнику');\r\n      }\r\n    };  \r\n\r\n    const thirdPlaceWinnerName = thirdPlaceWinner ? thirdPlaceWinner.username : '';\r\n\r\n    useEffect(() => {\r\n      fetch(`https://carxtours.com/api/tournaments/detail/${id}/`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error('Error loading participants');\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          if (!Array.isArray(data.participants)) {\r\n            console.error('Participants must be an array');\r\n            return;\r\n          }\r\n          const participants = data.participants.map(participant => ({\r\n            id: participant.user.id,\r\n            username: participant.user.username,\r\n            try1: participant.try1,\r\n            try2: participant.try2,\r\n          }));\r\n          setParticipants(participants);  // Установка participants в состоянии\r\n          const totalRounds = Math.ceil(Math.log2(participants.length));  // Вычисление totalRounds\r\n          const initialRounds = [createRound(participants)];\r\n          setOwnerId(data.owner);\r\n          console.log('Owner Id:', data.owner);\r\n    \r\n          if (participants.length > 2) {\r\n            // Если участников больше 2, добавляется матч за третье место после финала\r\n            const finalRoundIndex = Math.ceil(Math.log2(participants.length));\r\n            const newRound = createRound([null, null]);\r\n            setRounds(prevRounds => [\r\n              ...prevRounds.slice(0, finalRoundIndex),\r\n              newRound,\r\n              ...prevRounds.slice(finalRoundIndex),\r\n            ]);\r\n          }\r\n          setRounds(initialRounds);\r\n        })\r\n        .catch(err => console.error(err));\r\n    }, [id]);\r\n\r\n    return (\r\n      <div className=\"grid\">\r\n        <Header />\r\n        <div className=\"tour_grid\">\r\n          <div className=\"back\">\r\n            <h3>Турнирная сетка</h3>\r\n            <Link to={`/tournament/${id}/`}>Назад</Link>\r\n          </div>\r\n          {rounds.map((round, roundIndex) => (\r\n            <div className=\"round\" key={roundIndex}>\r\n              <h4>Round {roundIndex + 1}</h4>\r\n              <ul>\r\n                {round.map((pair, pairIndex) => (\r\n                  <li key={pairIndex}>\r\n                    <div className=\"fp\">\r\n                      <button\r\n                        disabled={pair.winner !== null}\r\n                        onClick={() => handleWinnerSelect(roundIndex, pairIndex, 0)}\r\n                      >\r\n                        {pair.players[0] ? pair.players[0].username : 'Участник не определен'}\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"tp\">\r\n                      <button\r\n                        disabled={pair.winner !== null || !pair.players[1]}\r\n                        onClick={() => handleWinnerSelect(roundIndex, pairIndex, 1)}\r\n                      >\r\n                        {pair.players[1] ? pair.players[1].username : 'Участник не определен'}\r\n                      </button>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              {roundIndex === rounds.length - 1 && thirdPlaceMatch && !thirdPlaceWinner && (\r\n                <div className=\"round\">\r\n                  <h4>Match for the third place</h4>\r\n                  <ul>\r\n                    <li>\r\n                      <button\r\n                        disabled={thirdPlaceMatch.winner !== null}\r\n                        onClick={() => handleThirdPlaceWinnerSelect(0)}\r\n                      >\r\n                        {thirdPlaceMatch.players[0].username}\r\n                      </button>\r\n                      <button\r\n                        disabled={thirdPlaceMatch.winner !== null}\r\n                        onClick={() => handleThirdPlaceWinnerSelect(1)}\r\n                      >\r\n                        {thirdPlaceMatch.players[1].username}\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n    \r\n          {tournamentWinner && (\r\n            <div className=\"winner\">\r\n              <h4>Победитель турнира</h4>\r\n              <p>{tournamentWinner.username}</p>\r\n            </div>\r\n          )}\r\n    \r\n          {thirdPlaceWinner && (\r\n            <div className=\"round\">\r\n              <h4>Третье место</h4>\r\n              <p>{thirdPlaceWinnerName}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Grid;",{"ruleId":"91","severity":1,"message":"92","line":38,"column":6,"nodeType":"93","endLine":38,"endColumn":8,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"92","line":45,"column":6,"nodeType":"93","endLine":45,"endColumn":8,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":11,"column":12,"nodeType":"98","messageId":"99","endLine":11,"endColumn":19},{"ruleId":"96","severity":1,"message":"100","line":12,"column":12,"nodeType":"98","messageId":"99","endLine":12,"endColumn":18},{"ruleId":"96","severity":1,"message":"101","line":13,"column":12,"nodeType":"98","messageId":"99","endLine":13,"endColumn":30},{"ruleId":"96","severity":1,"message":"102","line":145,"column":17,"nodeType":"98","messageId":"99","endLine":145,"endColumn":28},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["103"],["104"],"no-unused-vars","'winners' is assigned a value but never used.","Identifier","unusedVar","'losers' is assigned a value but never used.","'thirdPlaceFighters' is assigned a value but never used.","'totalRounds' is assigned a value but never used.",{"desc":"105","fix":"106"},{"desc":"105","fix":"107"},"Update the dependencies array to be: [navigate]",{"range":"108","text":"109"},{"range":"110","text":"109"},[1221,1223],"[navigate]",[1578,1580]]