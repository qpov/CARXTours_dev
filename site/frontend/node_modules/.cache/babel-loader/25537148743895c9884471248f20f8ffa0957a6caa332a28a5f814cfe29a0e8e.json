{"ast":null,"code":"var _jsxFileName = \"A:\\\\CARXTours\\\\site\\\\frontend\\\\src\\\\pages\\\\Grid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport '../css/grid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Grid() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [rounds, setRounds] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [tournamentWinner, setTournamentWinner] = useState(null);\n  useEffect(() => {\n    fetch(`https://carxtours.com/api/tournaments/detail/${id}/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Error loading participants');\n      }\n      return response.json();\n    }).then(data => {\n      if (!Array.isArray(data.participants)) {\n        console.error('Participants must be an array');\n        return;\n      }\n      const participants = data.participants.map(participant => ({\n        id: participant.user.id,\n        username: participant.user.username,\n        try1: participant.try1,\n        try2: participant.try2\n      }));\n      setRounds([createRound(participants)]);\n      setLoading(false);\n    }).catch(err => console.error(err));\n  }, [id]);\n  const handleWinnerSelect = (roundIndex, pairIndex, winnerIndex) => {\n    const updatedRounds = rounds.map((round, index) => {\n      if (index === roundIndex) {\n        const updatedPairs = round.map((pair, pIndex) => {\n          if (pIndex === pairIndex) {\n            const winner = pair.players[winnerIndex] ? pair.players[winnerIndex] : null;\n            return {\n              ...pair,\n              winner: winner ? {\n                ...winner\n              } : null\n            };\n          }\n          return pair;\n        });\n        return updatedPairs;\n      }\n      return round;\n    });\n    setRounds(updatedRounds);\n  };\n  const tournamentWinnerName = tournamentWinner ? tournamentWinner.username : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tour_grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"back\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0422\\u0443\\u0440\\u043D\\u0438\\u0440\\u043D\\u0430\\u044F \\u0441\\u0435\\u0442\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/tournament/${id}/`,\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participants\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: pairs.map((pair, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: pair.winner !== null,\n                onClick: () => handleWinnerSelect(index, 0),\n                children: pair.players[0] ? pair.players[0].username : 'Участник не определен'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: pair.winner !== null || !pair.players[1],\n                onClick: () => handleWinnerSelect(index, 1),\n                children: pair.players[1] ? pair.players[1].username : 'Участник не определен'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), tournamentWinner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"\\u041F\\u043E\\u0431\\u0435\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C \\u0442\\u0443\\u0440\\u043D\\u0438\\u0440\\u0430: \", tournamentWinnerName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Grid, \"uveQEp6MZBXvost+tULmZzlJ7UM=\", false, function () {\n  return [useParams];\n});\n_c = Grid;\nexport default Grid;\nfunction createRound(participants) {\n  const pairs = [];\n  for (let i = 0; i < participants.length; i += 2) {\n    const player1 = participants[i];\n    const player2 = participants[i + 1] || null;\n    const pair = {\n      players: [player1, player2],\n      winner: null\n    };\n    pairs.push(pair);\n  }\n  return pairs;\n}\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","Header","jsxDEV","_jsxDEV","Grid","_s","id","rounds","setRounds","loading","setLoading","tournamentWinner","setTournamentWinner","fetch","method","headers","then","response","ok","Error","json","data","Array","isArray","participants","console","error","map","participant","user","username","try1","try2","createRound","catch","err","handleWinnerSelect","roundIndex","pairIndex","winnerIndex","updatedRounds","round","index","updatedPairs","pair","pIndex","winner","players","tournamentWinnerName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","pairs","disabled","onClick","_c","i","length","player1","player2","push","$RefreshReg$"],"sources":["A:/CARXTours/site/frontend/src/pages/Grid.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport '../css/grid.css';\r\n\r\nfunction Grid() {\r\n  const { id } = useParams();\r\n  const [rounds, setRounds] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [tournamentWinner, setTournamentWinner] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://carxtours.com/api/tournaments/detail/${id}/`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Error loading participants');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        if (!Array.isArray(data.participants)) {\r\n          console.error('Participants must be an array');\r\n          return;\r\n        }\r\n        const participants = data.participants.map(participant => ({\r\n          id: participant.user.id,\r\n          username: participant.user.username,\r\n          try1: participant.try1,\r\n          try2: participant.try2,\r\n        }));\r\n        setRounds([createRound(participants)]);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => console.error(err));\r\n  }, [id]);\r\n\r\n  const handleWinnerSelect = (roundIndex, pairIndex, winnerIndex) => {\r\n    const updatedRounds = rounds.map((round, index) => {\r\n      if (index === roundIndex) {\r\n        const updatedPairs = round.map((pair, pIndex) => {\r\n          if (pIndex === pairIndex) {\r\n            const winner = pair.players[winnerIndex] ? pair.players[winnerIndex] : null;\r\n            return {\r\n              ...pair,\r\n              winner: winner ? { ...winner } : null,\r\n            };\r\n          }\r\n          return pair;\r\n        });\r\n        return updatedPairs;\r\n      }\r\n      return round;\r\n    });\r\n    setRounds(updatedRounds);\r\n  };\r\n\r\n  const tournamentWinnerName = tournamentWinner ? tournamentWinner.username : '';\r\n  \r\n  return (\r\n    <div className=\"grid\">\r\n      <Header />\r\n      <div className=\"tour_grid\">\r\n        <div className=\"back\">\r\n          <h3>Турнирная сетка</h3>\r\n          <Link to={`/tournament/${id}/`}>Назад</Link>\r\n        </div>\r\n        <div className=\"participants\">\r\n          <ul>\r\n            {pairs.map((pair, index) => (\r\n              <li key={index}>\r\n                <div>\r\n                  <button\r\n                    disabled={pair.winner !== null}\r\n                    onClick={() => handleWinnerSelect(index, 0)}\r\n                  >\r\n                    {pair.players[0] ? pair.players[0].username : 'Участник не определен'}\r\n                  </button>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    disabled={pair.winner !== null || !pair.players[1]}\r\n                    onClick={() => handleWinnerSelect(index, 1)}\r\n                  >\r\n                    {pair.players[1] ? pair.players[1].username : 'Участник не определен'}\r\n                  </button>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        {tournamentWinner && (\r\n          <div className=\"winner\">\r\n            <h4>Победитель турнира: {tournamentWinnerName}</h4>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n\r\nfunction createRound(participants) {\r\n  const pairs = [];\r\n  for (let i = 0; i < participants.length; i += 2) {\r\n    const player1 = participants[i];\r\n    const player2 = participants[i + 1] || null;\r\n    const pair = {\r\n      players: [player1, player2],\r\n      winner: null,\r\n    };\r\n    pairs.push(pair);\r\n  }\r\n  return pairs;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}