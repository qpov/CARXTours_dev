{"ast":null,"code":"var _jsxFileName = \"A:\\\\CARXTours\\\\site\\\\frontend\\\\src\\\\pages\\\\Grid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport '../css/grid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Grid() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [rounds, setRounds] = useState([]);\n  const [tournamentWinner, setTournamentWinner] = useState(null);\n  const [ownerId, setOwnerId] = useState(null);\n  const [winners, setWinners] = useState([]);\n  const [losers, setLosers] = useState([]);\n  const [thirdPlaceFighters, setThirdPlaceFighters] = useState([]);\n  const [thirdPlaceWinner, setThirdPlaceWinner] = useState(null);\n  const [thirdPlaceMatch, setThirdPlaceMatch] = useState(null);\n  const totalRounds = Math.ceil(Math.log2(participants.user.length));\n  const createRound = players => {\n    const pairs = [];\n    for (let i = 0; i < players.length; i += 2) {\n      pairs.push({\n        players: [players[i], players[i + 1]],\n        winner: null\n      });\n    }\n\n    // Если есть нечетное количество игроков, добавим \"заглушку\" (null) в последнюю пару\n    if (players.length % 2 === 1) {\n      pairs[pairs.length - 1].players.push(null);\n    }\n    return pairs;\n  };\n  useEffect(() => {\n    const activeRound = rounds[rounds.length - 1];\n    if (!activeRound) return;\n    const allPairsHaveWinners = activeRound.every(pair => pair.winner !== null);\n    if (!allPairsHaveWinners) return;\n    const winners = activeRound.map(pair => pair.winner);\n    const losers = activeRound.map(pair => pair.players.find(player => player !== pair.winner));\n    setLosers(losers); // storing losers\n\n    if (winners.length === 2) {\n      setThirdPlaceFighters(losers);\n    } else if (winners.length === 1) {\n      setTournamentWinner(winners[0]);\n      setWinners(prevWinners => [...prevWinners, winners[0]]);\n      return;\n    }\n    const newRound = createRound(winners);\n    setRounds(prevRounds => [...prevRounds, newRound]);\n  }, [rounds]);\n  const handleWinnerSelect = (roundIndex, pairIndex, winnerIndex) => {\n    const currentUserId = parseInt(window.localStorage.getItem('userId'));\n    if (currentUserId !== ownerId) {\n      alert('Вы не являетесь владельцем этого турнира');\n      return;\n    }\n    const updatedRounds = rounds.map((round, index) => {\n      if (index === roundIndex) {\n        const updatedPairs = round.map((pair, pIndex) => {\n          if (pIndex === pairIndex) {\n            const winner = pair.players[winnerIndex] ? pair.players[winnerIndex] : null;\n            console.log('Selected winner:', winner);\n            return {\n              ...pair,\n              winner: winner ? {\n                ...winner\n              } : null\n            };\n          }\n          return pair;\n        });\n        return updatedPairs;\n      }\n      return round;\n    });\n    setRounds(updatedRounds);\n    const winners = updatedRounds[roundIndex].map(pair => pair.winner);\n    const losers = updatedRounds[roundIndex].map(pair => pair.players.find(player => player !== pair.winner));\n\n    // If this is a semi-final round (the round before the last)\n    if (roundIndex === totalRounds - 2 && losers[0]) {\n      setThirdPlaceMatch({\n        players: losers,\n        winner: null\n      }); // Send the losers to the third place match\n    }\n\n    setWinners(prevWinners => [...prevWinners, ...winners]);\n  };\n  const handleThirdPlaceWinnerSelect = winnerIndex => {\n    const currentUserId = parseInt(window.localStorage.getItem('userId'));\n    if (currentUserId !== ownerId) {\n      alert('Вы не являетесь владельцем этого турнира');\n      return;\n    }\n    if (thirdPlaceMatch && thirdPlaceMatch.players && thirdPlaceMatch.players[winnerIndex]) {\n      const updatedThirdPlaceMatch = {\n        players: thirdPlaceMatch.players,\n        winner: thirdPlaceMatch.players[winnerIndex] // Устанавливаем победителя в соответствии с выбранным индексом\n      };\n\n      setThirdPlaceMatch(updatedThirdPlaceMatch);\n      setThirdPlaceWinner(updatedThirdPlaceMatch.winner);\n    } else {\n      alert('Выбранный индекс не соответствует участнику');\n    }\n  };\n  const thirdPlaceWinnerName = thirdPlaceWinner ? thirdPlaceWinner.username : '';\n  useEffect(() => {\n    fetch(`https://carxtours.com/api/tournaments/detail/${id}/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Error loading participants');\n      }\n      return response.json();\n    }).then(data => {\n      if (!Array.isArray(data.participants)) {\n        console.error('Participants must be an array');\n        return;\n      }\n      const participants = data.participants.map(participant => ({\n        id: participant.user.id,\n        username: participant.user.username,\n        try1: participant.try1,\n        try2: participant.try2\n      }));\n      const initialRounds = [createRound(participants)];\n      setOwnerId(data.owner);\n      console.log('Owner Id:', data.owner);\n      if (participants.length > 2) {\n        // Если участников больше 2, добавляем матч за третье место после финала\n        const finalRoundIndex = Math.ceil(Math.log2(participants.length));\n        const newRound = createRound([null, null]);\n        setRounds(prevRounds => [...prevRounds.slice(0, finalRoundIndex), newRound, ...prevRounds.slice(finalRoundIndex)]);\n      }\n      setRounds(initialRounds);\n    }).catch(err => console.error(err));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tour_grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"back\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0422\\u0443\\u0440\\u043D\\u0438\\u0440\\u043D\\u0430\\u044F \\u0441\\u0435\\u0442\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/tournament/${id}/`,\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), rounds.map((round, roundIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Round \", roundIndex + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: round.map((pair, pairIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fp\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: pair.winner !== null,\n                onClick: () => handleWinnerSelect(roundIndex, pairIndex, 0),\n                children: pair.players[0] ? pair.players[0].username : 'Участник не определен'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tp\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: pair.winner !== null || !pair.players[1],\n                onClick: () => handleWinnerSelect(roundIndex, pairIndex, 1),\n                children: pair.players[1] ? pair.players[1].username : 'Участник не определен'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 21\n            }, this)]\n          }, pairIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this), roundIndex === rounds.length - 1 && thirdPlaceMatch && !thirdPlaceWinner && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"round\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Match for the third place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: thirdPlaceMatch.winner !== null,\n                onClick: () => handleThirdPlaceWinnerSelect(0),\n                children: thirdPlaceMatch.players[0].username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: thirdPlaceMatch.winner !== null,\n                onClick: () => handleThirdPlaceWinnerSelect(1),\n                children: thirdPlaceMatch.players[1].username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this)]\n      }, roundIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this)), tournamentWinner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u041F\\u043E\\u0431\\u0435\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C \\u0442\\u0443\\u0440\\u043D\\u0438\\u0440\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tournamentWinner.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this), thirdPlaceWinner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u0422\\u0440\\u0435\\u0442\\u044C\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: thirdPlaceWinnerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 7\n  }, this);\n}\n_s(Grid, \"w1TK/iyrdeAkxSX2+n6A2o7fpws=\", false, function () {\n  return [useParams];\n});\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","Header","jsxDEV","_jsxDEV","Grid","_s","id","rounds","setRounds","tournamentWinner","setTournamentWinner","ownerId","setOwnerId","winners","setWinners","losers","setLosers","thirdPlaceFighters","setThirdPlaceFighters","thirdPlaceWinner","setThirdPlaceWinner","thirdPlaceMatch","setThirdPlaceMatch","totalRounds","Math","ceil","log2","participants","user","length","createRound","players","pairs","i","push","winner","activeRound","allPairsHaveWinners","every","pair","map","find","player","prevWinners","newRound","prevRounds","handleWinnerSelect","roundIndex","pairIndex","winnerIndex","currentUserId","parseInt","window","localStorage","getItem","alert","updatedRounds","round","index","updatedPairs","pIndex","console","log","handleThirdPlaceWinnerSelect","updatedThirdPlaceMatch","thirdPlaceWinnerName","username","fetch","method","headers","then","response","ok","Error","json","data","Array","isArray","error","participant","try1","try2","initialRounds","owner","finalRoundIndex","slice","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","disabled","onClick","_c","$RefreshReg$"],"sources":["A:/CARXTours/site/frontend/src/pages/Grid.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n  import { useParams, Link } from 'react-router-dom';\r\n  import Header from '../components/Header';\r\n  import '../css/grid.css';\r\n\r\n  function Grid() {\r\n    const { id } = useParams();\r\n    const [rounds, setRounds] = useState([]);\r\n    const [tournamentWinner, setTournamentWinner] = useState(null);\r\n    const [ownerId, setOwnerId] = useState(null);\r\n    const [winners, setWinners] = useState([]);\r\n    const [losers, setLosers] = useState([]);\r\n    const [thirdPlaceFighters, setThirdPlaceFighters] = useState([]);\r\n    const [thirdPlaceWinner, setThirdPlaceWinner] = useState(null);\r\n    const [thirdPlaceMatch, setThirdPlaceMatch] = useState(null);\r\n    const totalRounds = Math.ceil(Math.log2(participants.user.length));\r\n\r\n    const createRound = (players) => {\r\n      const pairs = [];\r\n      for (let i = 0; i < players.length; i += 2) {\r\n        pairs.push({\r\n          players: [players[i], players[i + 1]],\r\n          winner: null,\r\n        });\r\n      }\r\n    \r\n      // Если есть нечетное количество игроков, добавим \"заглушку\" (null) в последнюю пару\r\n      if (players.length % 2 === 1) {\r\n        pairs[pairs.length - 1].players.push(null);\r\n      }\r\n    \r\n      return pairs;\r\n    };\r\n    \r\n    useEffect(() => {\r\n      const activeRound = rounds[rounds.length - 1];\r\n      if (!activeRound) return;\r\n    \r\n      const allPairsHaveWinners = activeRound.every(pair => pair.winner !== null);\r\n      if (!allPairsHaveWinners) return;\r\n    \r\n      const winners = activeRound.map(pair => pair.winner);\r\n      const losers = activeRound.map(pair => pair.players.find(player => player !== pair.winner));\r\n    \r\n      setLosers(losers); // storing losers\r\n    \r\n      if (winners.length === 2) {\r\n        setThirdPlaceFighters(losers);\r\n      } else if (winners.length === 1) {\r\n        setTournamentWinner(winners[0]);\r\n        setWinners(prevWinners => [...prevWinners, winners[0]]);\r\n        return;\r\n      }\r\n    \r\n      const newRound = createRound(winners);\r\n      setRounds(prevRounds => [...prevRounds, newRound]);\r\n    \r\n    }, [rounds]);    \r\n\r\n    const handleWinnerSelect = (roundIndex, pairIndex, winnerIndex) => {\r\n      const currentUserId = parseInt(window.localStorage.getItem('userId'));\r\n    \r\n      if (currentUserId !== ownerId) {\r\n        alert('Вы не являетесь владельцем этого турнира');\r\n        return;\r\n      }\r\n    \r\n      const updatedRounds = rounds.map((round, index) => {\r\n        if (index === roundIndex) {\r\n          const updatedPairs = round.map((pair, pIndex) => {\r\n            if (pIndex === pairIndex) {\r\n              const winner = pair.players[winnerIndex] ? pair.players[winnerIndex] : null;\r\n              console.log('Selected winner:', winner);\r\n              return {\r\n                ...pair,\r\n                winner: winner ? { ...winner } : null,\r\n              };\r\n            }\r\n            return pair;\r\n          });\r\n          return updatedPairs;\r\n        }\r\n        return round;\r\n      });\r\n    \r\n      setRounds(updatedRounds);\r\n    \r\n      const winners = updatedRounds[roundIndex].map(pair => pair.winner);\r\n      const losers = updatedRounds[roundIndex].map(pair => pair.players.find(player => player !== pair.winner));\r\n    \r\n      // If this is a semi-final round (the round before the last)\r\n      if (roundIndex === totalRounds - 2 && losers[0]) {\r\n        setThirdPlaceMatch({ players: losers, winner: null }); // Send the losers to the third place match\r\n      }\r\n    \r\n      setWinners(prevWinners => [...prevWinners, ...winners]);\r\n    };\r\n\r\n    const handleThirdPlaceWinnerSelect = (winnerIndex) => {\r\n      const currentUserId = parseInt(window.localStorage.getItem('userId'));\r\n    \r\n      if (currentUserId !== ownerId) {\r\n        alert('Вы не являетесь владельцем этого турнира');\r\n        return;\r\n      }\r\n    \r\n      if (thirdPlaceMatch && thirdPlaceMatch.players && thirdPlaceMatch.players[winnerIndex]) {\r\n        const updatedThirdPlaceMatch = {\r\n          players: thirdPlaceMatch.players,\r\n          winner: thirdPlaceMatch.players[winnerIndex], // Устанавливаем победителя в соответствии с выбранным индексом\r\n        };\r\n        setThirdPlaceMatch(updatedThirdPlaceMatch);\r\n        setThirdPlaceWinner(updatedThirdPlaceMatch.winner);\r\n      } else {\r\n        alert('Выбранный индекс не соответствует участнику');\r\n      }\r\n    };  \r\n\r\n    const thirdPlaceWinnerName = thirdPlaceWinner ? thirdPlaceWinner.username : '';\r\n\r\n    useEffect(() => {\r\n      fetch(`https://carxtours.com/api/tournaments/detail/${id}/`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error('Error loading participants');\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          if (!Array.isArray(data.participants)) {\r\n            console.error('Participants must be an array');\r\n            return;\r\n          }\r\n          const participants = data.participants.map(participant => ({\r\n            id: participant.user.id,\r\n            username: participant.user.username,\r\n            try1: participant.try1,\r\n            try2: participant.try2,\r\n          }));\r\n          const initialRounds = [createRound(participants)];\r\n          setOwnerId(data.owner);\r\n          console.log('Owner Id:', data.owner);\r\n    \r\n          if (participants.length > 2) {\r\n            // Если участников больше 2, добавляем матч за третье место после финала\r\n            const finalRoundIndex = Math.ceil(Math.log2(participants.length));\r\n            const newRound = createRound([null, null]);\r\n            setRounds(prevRounds => [\r\n              ...prevRounds.slice(0, finalRoundIndex),\r\n              newRound,\r\n              ...prevRounds.slice(finalRoundIndex),\r\n            ]);\r\n          }\r\n    \r\n          setRounds(initialRounds);\r\n        })\r\n        .catch(err => console.error(err));\r\n    }, [id]);\r\n    \r\n    \r\n    return (\r\n      <div className=\"grid\">\r\n        <Header />\r\n        <div className=\"tour_grid\">\r\n          <div className=\"back\">\r\n            <h3>Турнирная сетка</h3>\r\n            <Link to={`/tournament/${id}/`}>Назад</Link>\r\n          </div>\r\n          {rounds.map((round, roundIndex) => (\r\n            <div className=\"round\" key={roundIndex}>\r\n              <h4>Round {roundIndex + 1}</h4>\r\n              <ul>\r\n                {round.map((pair, pairIndex) => (\r\n                  <li key={pairIndex}>\r\n                    <div className=\"fp\">\r\n                      <button\r\n                        disabled={pair.winner !== null}\r\n                        onClick={() => handleWinnerSelect(roundIndex, pairIndex, 0)}\r\n                      >\r\n                        {pair.players[0] ? pair.players[0].username : 'Участник не определен'}\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"tp\">\r\n                      <button\r\n                        disabled={pair.winner !== null || !pair.players[1]}\r\n                        onClick={() => handleWinnerSelect(roundIndex, pairIndex, 1)}\r\n                      >\r\n                        {pair.players[1] ? pair.players[1].username : 'Участник не определен'}\r\n                      </button>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              {roundIndex === rounds.length - 1 && thirdPlaceMatch && !thirdPlaceWinner && (\r\n                <div className=\"round\">\r\n                  <h4>Match for the third place</h4>\r\n                  <ul>\r\n                    <li>\r\n                      <button\r\n                        disabled={thirdPlaceMatch.winner !== null}\r\n                        onClick={() => handleThirdPlaceWinnerSelect(0)}\r\n                      >\r\n                        {thirdPlaceMatch.players[0].username}\r\n                      </button>\r\n                      <button\r\n                        disabled={thirdPlaceMatch.winner !== null}\r\n                        onClick={() => handleThirdPlaceWinnerSelect(1)}\r\n                      >\r\n                        {thirdPlaceMatch.players[1].username}\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n    \r\n          {tournamentWinner && (\r\n            <div className=\"winner\">\r\n              <h4>Победитель турнира</h4>\r\n              <p>{tournamentWinner.username}</p>\r\n            </div>\r\n          )}\r\n    \r\n          {thirdPlaceWinner && (\r\n            <div className=\"round\">\r\n              <h4>Третье место</h4>\r\n              <p>{thirdPlaceWinnerName}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n    \r\n  }\r\n\r\n  export default Grid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}