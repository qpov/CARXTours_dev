{"ast":null,"code":"var _jsxFileName = \"A:\\\\CARXTours\\\\site\\\\frontend\\\\src\\\\pages\\\\Grid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport '../css/grid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Grid() {\n  _s();\n  const {\n    id\n  } = useParams(); // Получение значения id из параметров пути\n\n  const [pairs, setPairs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Выполнение запроса для получения участников турнира\n    fetch(`https://carxtours.com/api/tournaments/detail/${id}/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Ошибка при загрузке участников');\n      }\n      return response.json();\n    }).then(data => {\n      if (!Array.isArray(data.participants)) {\n        console.error('Участники должны быть представлены в виде массива');\n        return;\n      }\n      const pairsData = [];\n      for (let i = 0; i < data.participants.length; i += 2) {\n        const participant1 = data.participants[i];\n        const participant2 = data.participants[i + 1];\n        pairsData.push({\n          participant1: {\n            id: participant1.user.id,\n            username: participant1.user.username,\n            try1: participant1.try1,\n            try2: participant1.try2\n          },\n          participant2: {\n            id: participant2.user.id,\n            username: participant2.user.username,\n            try1: participant2.try1,\n            try2: participant2.try2\n          }\n        });\n      }\n      setPairs(pairsData);\n      setLoading(false);\n    }).catch(err => console.error(err));\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tour_grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"back\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0422\\u0443\\u0440\\u043D\\u0438\\u0440\\u043D\\u0430\\u044F \\u0441\\u0435\\u0442\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/tournament/${id}/`,\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participants\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: pairs.map((pair, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: pair.participant1.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: pair.participant2.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bracket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Grid, \"IQnjnZiFITwH+ZjiK3x6vBDttdY=\", false, function () {\n  return [useParams];\n});\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","Header","jsxDEV","_jsxDEV","Grid","_s","id","pairs","setPairs","loading","setLoading","fetch","method","headers","then","response","ok","Error","json","data","Array","isArray","participants","console","error","pairsData","i","length","participant1","participant2","push","user","username","try1","try2","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","map","pair","index","_c","$RefreshReg$"],"sources":["A:/CARXTours/site/frontend/src/pages/Grid.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport '../css/grid.css';\r\n\r\nfunction Grid() {\r\n  const { id } = useParams(); // Получение значения id из параметров пути\r\n\r\n  const [pairs, setPairs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Выполнение запроса для получения участников турнира\r\n    fetch(`https://carxtours.com/api/tournaments/detail/${id}/`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Ошибка при загрузке участников');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        if (!Array.isArray(data.participants)) {\r\n          console.error('Участники должны быть представлены в виде массива');\r\n          return;\r\n        }\r\n        const pairsData = [];\r\n        for (let i = 0; i < data.participants.length; i += 2) {\r\n          const participant1 = data.participants[i];\r\n          const participant2 = data.participants[i + 1];\r\n          pairsData.push({\r\n            participant1: {\r\n              id: participant1.user.id,\r\n              username: participant1.user.username,\r\n              try1: participant1.try1,\r\n              try2: participant1.try2,\r\n            },\r\n            participant2: {\r\n              id: participant2.user.id,\r\n              username: participant2.user.username,\r\n              try1: participant2.try1,\r\n              try2: participant2.try2,\r\n            },\r\n          });\r\n        }\r\n        setPairs(pairsData);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => console.error(err));\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return <div>Загрузка...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n      <Header />\r\n      <div className=\"tour_grid\">\r\n        <div className=\"back\">\r\n          <h3>Турнирная сетка</h3>\r\n          <Link to={`/tournament/${id}/`}>Назад</Link>\r\n        </div>\r\n        <div className=\"participants\">\r\n          <ul>\r\n            {pairs.map((pair, index) => (\r\n              <li key={index}>\r\n                <div>{pair.participant1.username}</div>\r\n                <div>{pair.participant2.username}</div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"bracket\">\r\n          {/* Код для отображения турнирной сетки */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}